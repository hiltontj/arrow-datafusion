# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# TESTS FOR PARQUET FILES

# Setup basic alltypes_plain table:

statement ok
CREATE EXTERNAL TABLE alltypes_plain (
  id  INT NOT NULL,
  bool_col BOOLEAN NOT NULL,
  tinyint_col TINYINT NOT NULL,
  smallint_col SMALLINT NOT NULL,
  int_col INT NOT NULL,
  bigint_col BIGINT NOT NULL,
  float_col FLOAT NOT NULL,
  double_col DOUBLE NOT NULL,
  date_string_col BYTEA NOT NULL,
  string_col VARCHAR NOT NULL,
  timestamp_col TIMESTAMP NOT NULL,
)
STORED AS PARQUET
WITH HEADER ROW
LOCATION '../../parquet-testing/data/alltypes_plain.parquet'

# Test a basic query:

query IT
SELECT id, CAST(string_col AS varchar) FROM alltypes_plain
----
4 0
5 1
6 0
7 1
2 0
3 1
0 0
1 1

# Perform SELECT on un-ordered table, expect no "output_ordering" clause in physical_plan -> ParquetExec:

query TT
EXPLAIN SELECT int_col, string_col
FROM alltypes_plain
ORDER BY string_col, int_col
LIMIT 10
----
logical_plan
Limit: skip=0, fetch=10
--Sort: alltypes_plain.string_col ASC NULLS LAST, alltypes_plain.int_col ASC NULLS LAST, fetch=10
----TableScan: alltypes_plain projection=[int_col, string_col]
physical_plan
GlobalLimitExec: skip=0, fetch=10
--SortExec: TopK(fetch=10), expr=[string_col@1 ASC NULLS LAST,int_col@0 ASC NULLS LAST]
----ParquetExec: file_groups={1 group: [[WORKSPACE_ROOT/parquet-testing/data/alltypes_plain.parquet]]}, projection=[int_col, string_col]

# Perform SELECT on ordered table, from multiple files, where number of files is same or less than
# the number of partitions. This should contain a "output_ordering" clause in physical_plan -> ParquetExec:

query TT
EXPLAIN SELECT int_col, string_col
FROM alltypes_plain_multi_files
ORDER BY string_col, int_col
LIMIT 10
----
logical_plan
Limit: skip=0, fetch=10
--Sort: alltypes_plain_multi_files.string_col ASC NULLS LAST, alltypes_plain_multi_files.int_col ASC NULLS LAST, fetch=10
----TableScan: alltypes_plain_multi_files projection=[int_col, string_col]
physical_plan
GlobalLimitExec: skip=0, fetch=10
--SortPreservingMergeExec: [string_col@1 ASC NULLS LAST,int_col@0 ASC NULLS LAST], fetch=10
----ParquetExec: file_groups={4 groups: [[var/folders/3_/_nl7ywwd0l389b58dnksk8fm0000gn/T/.tmpVf7EaN/parquet/multi/alltypes_plain0.parquet], [var/folders/3_/_nl7ywwd0l389b58dnksk8fm0000gn/T/.tmpVf7EaN/parquet/multi/alltypes_plain1.parquet], [var/folders/3_/_nl7ywwd0l389b58dnksk8fm0000gn/T/.tmpVf7EaN/parquet/multi/alltypes_plain2.parquet], [var/folders/3_/_nl7ywwd0l389b58dnksk8fm0000gn/T/.tmpVf7EaN/parquet/multi/alltypes_plain3.parquet]]}, projection=[int_col, string_col], output_ordering=[string_col@1 ASC NULLS LAST, int_col@0 ASC NULLS LAST]

# Perform SELECT on ordered table, from multiple files, where number of files is more than the number
# of partitions. This should not contain a "output_ordering" clause in physical_plan -> ParquetExec, because
# there are more files than partitions:

query TT
EXPLAIN SELECT int_col, string_col
FROM alltypes_plain_multi_files_no_sort
ORDER BY string_col, int_col
LIMIT 10
----
logical_plan
Limit: skip=0, fetch=10
--Sort: alltypes_plain_multi_files_no_sort.string_col ASC NULLS LAST, alltypes_plain_multi_files_no_sort.int_col ASC NULLS LAST, fetch=10
----TableScan: alltypes_plain_multi_files_no_sort projection=[int_col, string_col]
physical_plan
GlobalLimitExec: skip=0, fetch=10
--SortPreservingMergeExec: [string_col@1 ASC NULLS LAST,int_col@0 ASC NULLS LAST], fetch=10
----SortExec: TopK(fetch=10), expr=[string_col@1 ASC NULLS LAST,int_col@0 ASC NULLS LAST]
------ParquetExec: file_groups={3 groups: [[var/folders/3_/_nl7ywwd0l389b58dnksk8fm0000gn/T/.tmpVf7EaN/parquet/multi_no_sort/alltypes_plain0.parquet, var/folders/3_/_nl7ywwd0l389b58dnksk8fm0000gn/T/.tmpVf7EaN/parquet/multi_no_sort/alltypes_plain1.parquet], [var/folders/3_/_nl7ywwd0l389b58dnksk8fm0000gn/T/.tmpVf7EaN/parquet/multi_no_sort/alltypes_plain2.parquet, var/folders/3_/_nl7ywwd0l389b58dnksk8fm0000gn/T/.tmpVf7EaN/parquet/multi_no_sort/alltypes_plain3.parquet], [var/folders/3_/_nl7ywwd0l389b58dnksk8fm0000gn/T/.tmpVf7EaN/parquet/multi_no_sort/alltypes_plain4.parquet]]}, projection=[int_col, string_col]
